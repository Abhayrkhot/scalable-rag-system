version: '3.8'

services:
  rag-api:
    build: .
    ports:
      - "8000:8000"
      - "8001:8001"  # Prometheus metrics
    environment:
      - API_KEY=${API_KEY:-your-secure-api-key}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - VECTOR_DB_PROVIDER=${VECTOR_DB_PROVIDER:-chroma}
      - CHROMA_PERSIST_DIRECTORY=/app/data/chroma_db
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_ENVIRONMENT=${PINECONE_ENVIRONMENT}
      - PINECONE_INDEX_NAME=${PINECONE_INDEX_NAME:-rag-documents}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL:-text-embedding-3-large}
      - DATABASE_URL=postgresql://raguser:ragpass@postgres:5432/rag_system
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./data:/app/data
      - ./sample_docs:/app/sample_docs:ro
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=rag_system
      - POSTGRES_USER=raguser
      - POSTGRES_PASSWORD=ragpass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  celery-worker:
    build: .
    command: celery -A app.celery_app worker --loglevel=info --concurrency=4
    environment:
      - API_KEY=${API_KEY:-your-secure-api-key}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - VECTOR_DB_PROVIDER=${VECTOR_DB_PROVIDER:-chroma}
      - CHROMA_PERSIST_DIRECTORY=/app/data/chroma_db
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_ENVIRONMENT=${PINECONE_ENVIRONMENT}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL:-text-embedding-3-large}
      - DATABASE_URL=postgresql://raguser:ragpass@postgres:5432/rag_system
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./data:/app/data
      - ./sample_docs:/app/sample_docs:ro
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  celery-beat:
    build: .
    command: celery -A app.celery_app beat --loglevel=info
    environment:
      - API_KEY=${API_KEY:-your-secure-api-key}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - VECTOR_DB_PROVIDER=${VECTOR_DB_PROVIDER:-chroma}
      - CHROMA_PERSIST_DIRECTORY=/app/data/chroma_db
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_ENVIRONMENT=${PINECONE_ENVIRONMENT}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL:-text-embedding-3-large}
      - DATABASE_URL=postgresql://raguser:ragpass@postgres:5432/rag_system
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./data:/app/data
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
